---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			.blog-container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 2rem;
			}
			
			.hero-section {
				text-align: center;
				margin-bottom: 3rem;
				padding: 2rem 0;
			}
			
			.hero-image {
				width: 100%;
				max-width: 800px;
				margin: 0 auto 2rem;
				border-radius: 20px;
				overflow: hidden;
				box-shadow: var(--card-shadow);
			}
			
			.hero-image img {
				width: 100%;
				height: 400px;
				object-fit: cover;
				transition: transform 0.3s ease;
			}
			
			.title-section {
				max-width: 800px;
				margin: 0 auto;
				padding: 2rem;
				background: var(--card-bg);
				border-radius: 16px;
				border: 1px solid var(--border-color);
				box-shadow: var(--card-shadow);
			}
			
			.title-section h1 {
				font-size: 2.5rem;
				margin-bottom: 1rem;
				background: linear-gradient(135deg, var(--accent), var(--accent-light));
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
				line-height: 1.2;
			}
			
			.meta-info {
				display: flex;
				justify-content: center;
				gap: 2rem;
				margin-bottom: 1rem;
				flex-wrap: wrap;
			}
			
			.date {
				color: var(--accent);
				font-weight: 600;
				font-size: 1rem;
			}
			
			.last-updated-on {
				color: var(--text-muted);
				font-style: italic;
				font-size: 0.9rem;
			}
			
			.divider {
				height: 3px;
				background: linear-gradient(90deg, transparent, var(--accent), transparent);
				border: none;
				margin: 2rem 0;
			}
			
			.prose {
				max-width: 800px;
				margin: 0 auto;
				padding: 2rem;
				background: var(--card-bg);
				border-radius: 16px;
				border: 1px solid var(--border-color);
				box-shadow: var(--card-shadow);
				line-height: 1.8;
			}
			
			.prose h2 {
				color: var(--accent);
				margin-top: 3rem;
				margin-bottom: 1rem;
				padding-bottom: 0.5rem;
				border-bottom: 2px solid var(--border-color);
			}
			
			.prose h3 {
				color: var(--accent-light);
				margin-top: 2rem;
				margin-bottom: 1rem;
			}
			
			.prose p {
				margin-bottom: 1.5rem;
				color: var(--text-secondary);
			}
			
			.prose strong {
				color: var(--accent-light);
			}
			
			.prose blockquote {
				margin: 2rem 0;
				padding: 1.5rem;
				background: var(--secondary-bg);
				border-left: 4px solid var(--accent);
				border-radius: 0 12px 12px 0;
				font-style: italic;
			}
			
			.prose ul, .prose ol {
				margin: 1.5rem 0;
				padding-left: 2rem;
			}
			
			.prose li {
				margin-bottom: 0.5rem;
				color: var(--text-secondary);
			}
			
			.prose code {
				background: var(--secondary-bg);
				color: var(--accent-light);
				padding: 0.2rem 0.5rem;
				border-radius: 4px;
				font-size: 0.9em;
			}
			
			.prose pre {
				background: var(--secondary-bg);
				padding: 1.5rem;
				border-radius: 12px;
				overflow-x: auto;
				margin: 2rem 0;
				border: 1px solid var(--border-color);
			}
			
			@media (max-width: 768px) {
				.blog-container {
					padding: 1rem;
				}
				
				.title-section {
					padding: 1.5rem;
				}
				
				.title-section h1 {
					font-size: 2rem;
				}
				
				.hero-image img {
					height: 250px;
				}
				
				.meta-info {
					flex-direction: column;
					gap: 0.5rem;
				}
				
				.prose {
					padding: 1.5rem;
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<main class="blog-container">
			<article>
				<div class="hero-section">
					{heroImage && (
						<div class="hero-image">
							<Image width={800} height={400} src={heroImage} alt="" />
						</div>
					)}
					<div class="title-section">
						<div class="meta-info">
							<div class="date">
								<FormattedDate date={pubDate} />
							</div>
							{updatedDate && (
								<div class="last-updated-on">
									Last updated on <FormattedDate date={updatedDate} />
								</div>
							)}
						</div>
						<h1>{title}</h1>
						<hr class="divider" />
					</div>
				</div>
				<div class="prose">
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>

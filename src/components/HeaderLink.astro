---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname;
const baseUrl = import.meta.env.BASE_URL || '/';
const normalizedPathname = pathname.replace(baseUrl, '/');
const normalizedHref = href.replace(baseUrl, '/');
const isActive = normalizedHref === normalizedPathname || (normalizedHref === '/' && normalizedPathname === '/');
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
		color: var(--text-secondary);
		transition: all 0.3s ease;
		position: relative;
	}
	
	a.active {
		color: var(--accent-light);
		font-weight: 600;
	}
	
	a.active::after {
		content: '';
		position: absolute;
		bottom: -4px;
		left: 0;
		right: 0;
		height: 2px;
		background: var(--accent);
		border-radius: 1px;
	}
</style>
